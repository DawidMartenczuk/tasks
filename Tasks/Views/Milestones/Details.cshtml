@model Tasks.Models.Milestone
@using Tasks.Models
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = Model.Title;
}

<h1>@Html.DisplayFor(model => model.Title)</h1>
<hr />

<div class="mt-3">
    <h4>Milestone</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Start)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Start)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.End)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.End)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Tasks)
        </dt>
        <dd class="col-sm-10">
            @Model.Tasks.Count()
        </dd>
    </dl>
</div>

<div class="clearfix mt-5">
    <div class="float-left"><h3>Tasks</h3></div>
    @if (SignInManager.IsSignedIn(User))
    {
                <div class="float-right">
                    <div class="btn-group">
                        <button class="btn btn-success dropdown-toggle" type="button" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            Create New
                        </button>
                        <div class="dropdown-menu">
                            <a asp-action="Create" asp-controller="Tasks" asp-route-milestone="@Model.Id" class="dropdown-item">Task</a>
                            <a asp-action="Create" asp-controller="Tasks" asp-route-milestone="@Model.Id" asp-route-assignee="@UserManager.GetUserId(User)" class="dropdown-item">Task assigned to me</a>
                        </div>
                    </div>
                </div>
    }
</div>

@if (Model.Tasks.Count() > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Tasks.First().Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Tasks.First().Author)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Tasks.First().Assignee)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Tasks)
            {
                <tr>
                    <td>
                        @if (item.MilestoneId.HasValue)
                        {
                            <span class="badge badge-primary">@Html.DisplayFor(modelItem => item.Milestone.Title)</span>
                        }
                        @if (item.Closed)
                        {
                            <span class="badge badge-danger">Closed</span>
                        }
                        @Html.DisplayFor(modelItem => item.Title)<br />
                        <small>
                            @Html.DisplayFor(modelItem => item.Created)
                            @if (item.Updated.HasValue)
                            {
                                <span class="text-muted">@Html.DisplayNameFor(model => item.Updated)<a>:</a> @Html.DisplayFor(modelItem => item.Updated)</span>
                            }
                        </small>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Author.UserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Assignee.UserName)
                    </td>
                    <td class="text-right">
                        <a asp-action="Details" asp-controller="Tasks" asp-route-id="@item.Id" class="btn btn-sm btn-secondary">Details</a>
                        @if (SignInManager.IsSignedIn(User) && string.Equals((string)UserManager.GetUserId(User), item.AuthorId))
                        {
                            <a asp-action="Edit" asp-controller="Tasks" asp-route-id="@item.Id" class="btn btn-sm btn-primary">Edit</a>
                            <a asp-action="Delete" asp-controller="Tasks" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <div class="alert alert-info mt-3">No tasks assigned to this milestone!</div>
}

<div class="clearfix mt-5">
    <div class="float-left">
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
    <div class="float-right">
        @if (SignInManager.IsSignedIn(User))
        {
            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">Edit</a>
            <a asp-action="Delete" asp-route-id="@Model.Id" class="btn btn-danger">Delete</a>
        }
    </div>
</div>