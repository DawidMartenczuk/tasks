@model Tasks.Models.Task
@using System.Security.Claims
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    Layout = null;
}

@foreach (var log in Model.Logs)
{
<div class="mt-3" data-log-id="@log.Id" id="log-@log.Id">
    <div>
        <small>
            <b class="@(string.Equals(Model.AuthorId, log.UserId) ? "text-success" : (string.Equals(Model.AssigneeId, log.UserId) ? "text-primary" : "text-muted"))">
                @Html.DisplayFor(model => log.Title)
            </b> by @Html.DisplayFor(model => log.User.UserName), @Html.DisplayFor(model => log.Created)
        </small>
    </div>
    <div>@Html.DisplayFor(model => log.Description)</div>
    <div>
        <small class="text-muted">
            @if (log.Updated.HasValue)
            {
                @Html.DisplayNameFor(model => log.Updated)<span>:</span> @Html.DisplayFor(model => log.Updated)
            }
            @if (SignInManager.IsSignedIn(User) && string.Equals((string)UserManager.GetUserId(User), log.UserId))
            {
                <a href="#log-@log.Id" class="text-primary" data-log-edit="true">Edit</a> <span> </span>
                <a asp-action="Delete" asp-controller="TaskLogs" asp-route-id="@log.Id" class="text-danger">Delete</a>
            }
        </small>
    </div>
</div>
}